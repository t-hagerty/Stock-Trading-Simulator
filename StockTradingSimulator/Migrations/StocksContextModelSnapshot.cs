// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockTradingSimulator.Models;

namespace StockTradingSimulator.Migrations
{
    [DbContext(typeof(StocksContext))]
    partial class StocksContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StockTradingSimulator.Models.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName");

                    b.Property<DateTime>("StartDataDate");

                    b.Property<string>("TickerSymbol");

                    b.HasKey("ID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("StockTradingSimulator.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId");

                    b.Property<int>("CompanyID");

                    b.Property<DateTime>("OrderPlacedTime");

                    b.Property<decimal>("PriceLimit");

                    b.Property<int>("Quantity");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("StockTradingSimulator.Models.Stock", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId");

                    b.Property<int>("CompanyID");

                    b.Property<decimal>("Price");

                    b.Property<DateTime>("PurchasedTime");

                    b.Property<int>("Quantity");

                    b.Property<DateTime>("SoldTime");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("StockTradingSimulator.Models.StockCandlestick", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Close");

                    b.Property<int>("CompanyId");

                    b.Property<decimal>("High");

                    b.Property<decimal>("Low");

                    b.Property<decimal>("Open");

                    b.Property<DateTime>("Timestamp");

                    b.Property<int>("Volume");

                    b.HasKey("ID");

                    b.HasIndex("CompanyId");

                    b.ToTable("StockCandlestick");
                });

            modelBuilder.Entity("StockTradingSimulator.Models.Order", b =>
                {
                    b.HasOne("StockTradingSimulator.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StockTradingSimulator.Models.Stock", b =>
                {
                    b.HasOne("StockTradingSimulator.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StockTradingSimulator.Models.StockCandlestick", b =>
                {
                    b.HasOne("StockTradingSimulator.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
